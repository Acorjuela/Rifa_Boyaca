/*
  WARNING: This script will delete existing tables (tickets, settings, packages, prizes)
  and recreate them from scratch. Only run this if you are setting up the database
  for the first time or want to reset it completely.
  All existing data in these tables will be lost.
*/

-- Drop existing tables if they exist to ensure a clean slate
DROP TABLE IF EXISTS public.tickets;
DROP TABLE IF EXISTS public.prizes;
DROP TABLE IF EXISTS public.packages;
DROP TABLE IF EXISTS public.settings;

-- Create settings table
CREATE TABLE public.settings (
    id bigint NOT NULL PRIMARY KEY DEFAULT 1,
    raffle_date timestamp with time zone NOT NULL,
    raffle_size integer NOT NULL,
    usd_to_cop_rate numeric NOT NULL,
    raffle_info jsonb NOT NULL,
    payment_options jsonb NOT NULL,
    logo_url text,
    winning_numbers jsonb NOT NULL,
    CONSTRAINT settings_id_check CHECK ((id = 1))
);

-- Create packages table
CREATE TABLE public.packages (
    id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    label text NOT NULL,
    price_cop numeric NOT NULL,
    price_usd numeric NOT NULL,
    numbers integer NOT NULL
);

-- Create prizes table
CREATE TABLE public.prizes (
    id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    url text,
    enabled boolean NOT NULL DEFAULT true
);

-- Create tickets table
CREATE TABLE public.tickets (
    id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    created_at timestamp with time zone NOT NULL DEFAULT now(),
    nombre text NOT NULL,
    apellido text NOT NULL,
    ciudad text NOT NULL,
    pais text NOT NULL,
    whatsapp text NOT NULL,
    numbers integer[] NOT NULL,
    total_value numeric NOT NULL,
    reference text NOT NULL,
    payment_platform text NOT NULL,
    ticket_code text NOT NULL,
    is_approved boolean NOT NULL DEFAULT false
);

-- Seed initial data
-- Seed settings
INSERT INTO public.settings (id, raffle_date, raffle_size, usd_to_cop_rate, raffle_info, payment_options, logo_url, winning_numbers)
VALUES (
    1,
    '2025-04-05 00:00:00+00',
    1000,
    4000,
    '{"title": "Sensacional Rifa", "description": "¡Apoya una buena causa y gana premios increíbles!"}',
    '{"nequi": {"qr_url": "https://img-wrapper.vercel.app/image?url=https://placehold.co/200x200.png?text=Nequi+QR", "enabled": true}, "binance": {"qr_url": "https://img-wrapper.vercel.app/image?url=https://placehold.co/200x200.png?text=Binance+QR", "enabled": true}}',
    'https://img-wrapper.vercel.app/image?url=https://img-wrapper.vercel.app/image?url=https://img-wrapper.vercel.app/image?url=https://placehold.co/120x120.png',
    '{"cifras": "????", "series": "???", "cifrasTitle": "Ganador a Cifras ($200.000)", "seriesTitle": "Ganador a Series ($600.000)"}'
);

-- Seed packages
INSERT INTO public.packages (label, price_cop, price_usd, numbers)
VALUES
    ('X1', 5000, 1.25, 1),
    ('X2', 10000, 2.5, 2),
    ('X3', 15000, 3.75, 3),
    ('X4', 20000, 5, 4),
    ('X5', 25000, 6.25, 5);

-- Seed prizes
INSERT INTO public.prizes (url, enabled)
VALUES
    ('https://img-wrapper.vercel.app/image?url=https://img-wrapper.vercel.app/image?url=https://placehold.co/150x150/000000/FFFFFF?text=Premio+1', true),
    ('https://img-wrapper.vercel.app/image?url=https://img-wrapper.vercel.app/image?url=https://placehold.co/150x150/000000/FFFFFF?text=Premio+2', true);


-- Set up Row Level Security (RLS)
ALTER TABLE public.settings ENABLE ROW LEVEL SECURITY;
ALTER TABLE public.packages ENABLE ROW LEVEL SECURITY;
ALTER TABLE public.prizes ENABLE ROW LEVEL SECURITY;
ALTER TABLE public.tickets ENABLE ROW LEVEL SECURITY;

-- Drop old policies if they exist to be safe
DROP POLICY IF EXISTS "Allow public read access" ON public.settings;
DROP POLICY IF EXISTS "Allow admin full access" ON public.settings;
DROP POLICY IF EXISTS "Allow public read access" ON public.packages;
DROP POLICY IF EXISTS "Allow admin full access" ON public.packages;
DROP POLICY IF EXISTS "Allow public read access" ON public.prizes;
DROP POLICY IF EXISTS "Allow admin full access" ON public.prizes;
DROP POLICY IF EXISTS "Allow public insert access" ON public.tickets;
DROP POLICY IF EXISTS "Allow admin full access" ON public.tickets;
DROP POLICY IF EXISTS "Allow admin access to storage" ON storage.objects;
DROP POLICY IF EXISTS "Allow public read access to assets" ON storage.objects;


-- Create RLS policies
-- settings
CREATE POLICY "Allow public read access" ON public.settings FOR SELECT USING (true);
CREATE POLICY "Allow admin full access" ON public.settings FOR ALL USING (auth.role() = 'authenticated');

-- packages
CREATE POLICY "Allow public read access" ON public.packages FOR SELECT USING (true);
CREATE POLICY "Allow admin full access" ON public.packages FOR ALL USING (auth.role() = 'authenticated');

-- prizes
CREATE POLICY "Allow public read access" ON public.prizes FOR SELECT USING (true);
CREATE POLICY "Allow admin full access" ON public.prizes FOR ALL USING (auth.role() = 'authenticated');

-- tickets
CREATE POLICY "Allow public insert access" ON public.tickets FOR INSERT WITH CHECK (true);
CREATE POLICY "Allow admin full access" ON public.tickets FOR ALL USING (auth.role() = 'authenticated');

-- storage
CREATE POLICY "Allow admin access to storage" ON storage.objects FOR ALL USING (auth.role() = 'authenticated');
CREATE POLICY "Allow public read access to assets" ON storage.objects FOR SELECT USING (bucket_id = 'assets');
